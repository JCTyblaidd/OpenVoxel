/**[VK::Vertex]**/

layout(location = 0) in vec2 position;
layout(location = 1) in vec2 uv_coord;
layout(location = 2) in vec4 col_input;

out gl_PerVertex {
    vec4 gl_Position;
};

layout(location = 0) out vec2 frag_UV;
layout(location = 1) out vec4 frag_Col;

void main() {
    frag_UV = uv_coord;
    frag_Col = col_input;
    gl_Position = vec4(position,0.0,1.0);
}

/**[VK::Fragment]**/

layout(location = 0) in vec2 frag_UV;
layout(location = 1) in vec4 frag_Col;

layout(location = 0) out vec4 colour;

layout(set = 0, binding = 0) uniform sampler2D texture_array[32];

layout(push_constant) uniform PushConsts {
    int image_offset;
    bool use_texture;
} pushConsts;

void main() {
    vec4 tmp_col = texture(texture_array[pushConsts.image_offset],frag_UV);
    if(tmp_col.r < 0.5) {
        colour =  vec4(0,0,0,0);
    }else{
        colour = tmp_col * frag_Col;
    }
}

/**[VK::End]**/