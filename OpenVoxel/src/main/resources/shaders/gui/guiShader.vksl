/**[VK::Vertex]**/
#version 450
#extension GL_ARB_separate_shader_objects : enable
#extension GL_KHR_vulkan_glsl : enable

layout(location = 0) in vec3 position;
layout(location = 1) in vec2 uv_coord;
layout(location = 2) in vec4 colour;

layout(push_constant, binding = 0) uniform push_data {
    uniform mat3 matrix;
    uniform float z_offset;
    uniform bool enable_tex;
};

out vec2 UV;
out vec4 Col;

void main() {
    UV = uv_coord;
    Col = colour;
    vec4 basePos = vec4(position,1) + vec4(0,0,push_data.z_offset,0);
    gl_Position = push_data.matrix * basePos;
}

/**[VK::Fragment]**/
#version 450
#extension GL_ARB_seperate_shader_objects : enable
#extension GL_KHR_vulkan_glsl : enable

in vec2 UV;
in vec4 Col;

layout(location = 0) out vec4 colour;

void main() {
    vec4 res;
    if(Enable_Tex) {
        res = texture2D(texture,UV).rgba;
    }else {
        res = vec4(1,1,1,1);
    }
    res *= Col;
    colour = res;
}


/**[VK::End]**/
