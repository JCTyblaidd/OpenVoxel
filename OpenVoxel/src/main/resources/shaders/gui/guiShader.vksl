/**[VK::Vertex]**/
#version 450
#pragma shader_stage(vertex)
#extension GL_ARB_separate_shader_objects : enable
#extension GL_ARB_shading_language_420pack : enable

layout(push_constant, binding = 0) uniform pushData {
    mat3 matrix;
    float z_offset;
    bool enable_tex;
} push_data;

layout(location = 0) in vec3 position;
layout(location = 1) in vec2 uv_coord;
layout(location = 2) in vec4 colour;

layout(location = 0) out vec2 UV;
layout(location = 1) out vec4 Col;

void main() {
    UV = uv_coord;
    Col = colour;
    vec4 basePos = vec4(position,1) + vec4(0,0,push_data.z_offset,0);
     gl_Position = vec4(push_data.matrix * basePos.xyz,1);
}

/**[VK::Fragment]**/
#version 450
#extension GL_ARB_separate_shader_objects : enable
#pragma shader_stage(fragment)

layout(push_constant, binding = 0) uniform push_data {
    mat3 matrix;
    float z_offset;
    bool enable_tex;
};

layout(location = 0) in vec2 UV;
layout(location  1) in vec4 Col;

layout(location = 0) out vec4 colour;

void main() {
    vec4 res;
    if(Enable_Tex) {
        res = texture2D(texture,UV).rgba;
    }else {
        res = vec4(1,1,1,1);
    }
    res *= Col;
    colour = res;
}


/**[VK::End]**/
